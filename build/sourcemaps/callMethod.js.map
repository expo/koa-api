{"version":3,"sources":["callMethod.js"],"names":[],"mappings":"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","file":"callMethod.js","sourcesContent":["let _ = require('lodash-node');\n\nlet ApiError = require('./ApiError');\n\n// var Api = {\n//   send: require('./send'),\n//   adduser: require('./adduser'),\n//   recordEmail: require('./recordEmail'),\n//   publish: require('./publish'),\n//   whoami: require('./whoami'),\n//   shortenUrl: require('./shortenUrl'),\n//   logout: require('./logout'),\n//   __reverse__: {\n//     doc: \"Reverses the first argument; for testing the API\",\n//     methodAsync: async function (env, args) {\n//       return args.map((s) => { return s.split(\"\").reverse().join(\"\"); }).reverse();\n//     },\n//   },\n// };\n\nmodule.exports = function (instance, opts) {\n\n  opts = _.assign({\n    logger: console,\n    augmentEnvAsync: async function (this_) {\n      return {\n        koaEnv: this_,\n        ip: this_.ip,\n        browserId: this_.browserId,\n        sessionId: this_.sessionId,\n        request: this_.request,\n      };\n    },\n  }, opts);\n\n  let callMethod = function*(next) {\n    let method = instance[this.params.method];\n    let jsonArgs = this.params.jsonArgs;\n    var args;\n    if ((!jsonArgs) || (jsonArgs == 'help') || (jsonArgs == 'doc')) {\n      this.body = {help: method.doc || \"[No documentation available]\"};\n    } else {\n      let argsOk = true;\n      try {\n        args = JSON.parse(jsonArgs);\n      } catch (e) {\n        argsOk = false;\n        this.body = {err: \"Problem with JSON arguments Error: \" + e}\n        yield next;\n        return;\n      }\n\n      if (argsOk) {\n        let methodName = this.params.method;\n\n        let env = _.assign({\n          args,\n          method,\n          methodName,\n        }, yield opts.augmentEnvAsync(this));\n\n        try {\n          let result = yield method.methodAsync(env, args);\n          if (!_.isObject(result)) {\n            result = {result: result};\n          }\n          result.err = result.err || null;\n          this.body = result;\n        } catch (e) {\n          console.log(\"caught\");\n          if (ApiError.isApiError(e)) {\n            logger.error(\"API Error:\", e);\n            this.body = {err: '' + e.message + '.', _isApiError: true, code: (e.code || 'UNKNOWN_API_ERROR'),};\n          } else {\n            logger.error(\"Server Error:\", e, e.stack);\n            this.body = {err: '' + e.message + '.', _isApiError: false, code: 'SERVER_ERROR',};\n          }\n        }\n      }\n    }\n\n    yield next;\n\n  };\n\n  return callMethod;\n\n}\n"],"sourceRoot":"/source/"}