{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;AAAA,IAAI,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC/B,IAAI,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEnC,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;AAEzC,MAAM,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE;;AAEzD,MAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;AAC/B,QAAI,GAAG,MAAM,CAAC;GACf,MAAM,IAAI,CAAC,MAAM,EAAE;AAClB,UAAM,GAAG,EAAE,CAAC;GACb;;AAED,MAAI,CAAC,IAAI,EAAE;AACT,QAAI,GAAG,EAAE,CAAC;GACX;;AAED,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC;;AAEpC,MAAI,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;;AAElC,MAAI,EAAE,GAAG,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AACvC,gBAAc,CAAC,GAAG,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC;AAC7C,gBAAc,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,IAAI,EAAE;AACvC,QAAI,IAAI,GAAG,EAAE,CAAC;AACd,SAAK,IAAI,CAAC,IAAI,aAAY,WAAW,CAAC,EAAE;AACtC,UAAI,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,oBAAoB,CAAC;KACtD;AACD,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;AACzB,sBAAgB,EAAE,IAAI;KACvB,CAAC,CAAC;AACH,UAAM,IAAI,CAAC;GACZ,CAAC,CAAC;AACH,KAAG,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC;AACjC,KAAG,CAAC,GAAG,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,CAAC;;AAEzC,SAAO,WAAW,IAAI,EAAE;AACtB,UAAM,IAAI,CAAC;GACZ,CAAC;CAEH,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC","file":"index.js","sourcesContent":["let _ = require('lodash-node');\nlet router = require('koa-router');\n\nlet ApiError = require('./ApiError');\nlet callMethod = require('./callMethod');\n\nmodule.exports = function (app, apiInstance, prefix, opts) {\n\n  if (_.isObject(prefix) && !opts) {\n    opts = prefix;\n  } else if (!prefix) {\n    prefix = '';\n  }\n\n  if (!opts) {\n    opts = {};\n  }\n\n  opts.prefix = opts.prefix || prefix;\n\n  let endpointRouter = router(opts);\n\n  let cm = callMethod(apiInstance, opts);\n  endpointRouter.all('/:method/:jsonArgs', cm);\n  endpointRouter.all('/', function *(next) {\n    let docs = {};\n    for (let k of Object.keys(apiInstance)) {\n      docs[k] = apiInstance[k].doc || \"[No documentation]\";\n    }\n    this.body = JSON.stringify({\n      availableMethods: docs,\n    });\n    yield next;\n  });\n  app.use(endpointRouter.routes());\n  app.use(endpointRouter.allowedMethods());\n\n  return function* (next) {\n    yield next;\n  };\n\n};\n\nmodule.exports.ApiError = ApiError;\n"],"sourceRoot":"/source/"}